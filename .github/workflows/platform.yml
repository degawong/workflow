name: platform

on: 
  push:
    branches:
      - "**" 
    # paths:
    	# - 下列文件的变更触发部署
    # paths-ignore:
      # - 下列文件的变更不触发部署

env:
  BUILD_TYPE: Release

jobs:
  gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: config
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p x32
        mkdir -p x64
        sudo apt-get update
        sudo apt-get install gcc-multilib g++-multilib
    - name: x32
      shell: bash
      working-directory: ${{github.workspace}}/x32
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="-m32" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_SYSTEM_PROCESSOR=x86
        cmake --build . --config $BUILD_TYPE -j 2
    - name: x64
      shell: bash
      working-directory: ${{github.workspace}}/x64
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="-m64" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_SYSTEM_PROCESSOR=x64
        cmake --build . --config $BUILD_TYPE -j 2

  clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: config
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p x32
        mkdir -p x64
        sudo apt-get update
        sudo apt-get install gcc-multilib g++-multilib
    - name: x32
      shell: bash
      working-directory: ${{github.workspace}}/x32
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="-m32" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SYSTEM_PROCESSOR=x86
        cmake --build . --config $BUILD_TYPE -j 2
    - name: x64
      shell: bash
      working-directory: ${{github.workspace}}/x64
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="-m64" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SYSTEM_PROCESSOR=x64
        cmake --build . --config $BUILD_TYPE -j 2

  android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: ndk-fix-bug
      run: sed -i -e '/^  -g$/d' $ANDROID_HOME/ndk-bundle/build/cmake/android.toolchain.cmake
    - name: config
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p arm32
        mkdir -p arm64
    - name: arm32
      shell: bash
      working-directory: ${{github.workspace}}/arm32
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$ANDROID_HOME/ndk-bundle/build/cmake/android.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DANDROID_ABI="armeabi-v7a" -DANDROID_ARM_NEON=ON -DANDROID_PLATFORM=android-21
        cmake --build . -j 2
    - name: arm64
      shell: bash
      working-directory: ${{github.workspace}}/arm64
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$ANDROID_HOME/ndk-bundle/build/cmake/android.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DANDROID_ABI="arm64-v8a" -DANDROID_ARM_NEON=ON -DANDROID_PLATFORM=android-21
        cmake --build . -j 2
        
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: config
      working-directory: ${{github.workspace}}
      run: |
        mkdir x86
        mkdir x64
    - name: x86
      working-directory: ${{github.workspace}}/x86
      run: |
        cmake ${{ github.workspace }} -T v142,host=x64 -A Win32
        cmake --build . --config Release -j 2
    - name: x64
      working-directory: ${{github.workspace}}/x64
      run: |
        cmake ${{ github.workspace }}
        cmake --build . --config Release -j 2

